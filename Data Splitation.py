# -*- coding: utf-8 -*-
"""Classification with ResNet50.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UN3b_9kHyUz-LrQG9CgPF2txwI7YWcf5
"""

###Split the main and augmented data into train:validation:test(70:15:15) set
import os
import shutil
import random
from tqdm import tqdm

def split_dataset(dataset_dir, output_dir, train_ratio=0.7, val_ratio=0.15, test_ratio=0.15):
    # Check if any of the ratio variables have been overwritten in the global scope
    if 'train_ratio' in globals():
        print("Warning: 'train_ratio' is defined in the global scope. Using the default value for splitting.")
    if 'val_ratio' in globals():
        print("Warning: 'val_ratio' is defined in the global scope. Using the default value for splitting.")
    if 'test_ratio' in globals():
        print("Warning: 'test_ratio' is defined in the global scope. Using the default value for splitting.")

    assert train_ratio + val_ratio + test_ratio == 1, "Train, validation and test ratios must sum to 1"
    classes = [d for d in os.listdir(dataset_dir) if os.path.isdir(os.path.join(dataset_dir, d))]

    for class_name in classes:
        class_dir = os.path.join(dataset_dir, class_name)
        images = os.listdir(class_dir)
        random.shuffle(images)

        train_split = int(train_ratio * len(images))
        val_split = int(val_ratio * len(images))

        train_images = images[:train_split]
        val_images = images[train_split:train_split + val_split]
        test_images = images[train_split + val_split:]

        # Create directories for train, validation, and test splits
        train_dir = os.path.join(output_dir, 'train', class_name)
        val_dir = os.path.join(output_dir, 'validation', class_name)
        test_dir = os.path.join(output_dir, 'test', class_name)

        os.makedirs(train_dir, exist_ok=True)
        os.makedirs(val_dir, exist_ok=True)
        os.makedirs(test_dir, exist_ok=True)

        # Move images to the corresponding directories
        for img in tqdm(train_images, desc=f'Moving train images for class {class_name}'):
            shutil.move(os.path.join(class_dir, img), os.path.join(train_dir, img))

        for img in tqdm(val_images, desc=f'Moving validation images for class {class_name}'):
            shutil.move(os.path.join(class_dir, img), os.path.join(val_dir, img))

        for img in tqdm(test_images, desc=f'Moving test images for class {class_name}'):
            shutil.move(os.path.join(class_dir, img), os.path.join(test_dir, img))

# Example usage - Provide values for train_ratio, val_ratio, and test_ratio that sum to 1
dataset_dir = 'Give the folder path of Main/Augmented data'
output_dir = 'Give the folder path for storing the data'
split_dataset(dataset_dir, output_dir, train_ratio=0.7, val_ratio=0.15, test_ratio=0.15)